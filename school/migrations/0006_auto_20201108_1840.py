# Generated by Django 2.0.3 on 2020-11-08 12:40

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('school', '0005_auto_20201103_1918'),
    ]

    operations = [
        migrations.CreateModel(
            name='ClassInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('class_name', models.CharField(max_length=20, unique=True)),
                ('class_code', models.IntegerField(default=0)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(default=django.utils.timezone.now)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Class',
                'verbose_name_plural': 'Classes',
            },
        ),
        migrations.CreateModel(
            name='ClassSubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_type', models.CharField(choices=[('1', 'Compulsory'), ('2', 'Religion'), ('3', 'Optional'), ('4', 'Pair Subject'), ('5', 'Group Subject')], max_length=1)),
                ('pair_sub', models.IntegerField(default=0)),
                ('group_for', models.CharField(blank=True, choices=[('1', 'Science'), ('2', 'Business'), ('3', 'Humanities')], max_length=1, null=True)),
                ('subject_priority', models.IntegerField(default=0)),
                ('ordering', models.IntegerField(default=0)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.ClassInfo')),
            ],
            options={
                'verbose_name': 'Class Subject',
                'verbose_name_plural': 'Class Subjects',
            },
        ),
        migrations.CreateModel(
            name='Department',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dpt_name', models.CharField(max_length=50, unique=True)),
                ('dpt_code', models.CharField(blank=True, max_length=10)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Department',
                'verbose_name_plural': 'Departments',
            },
        ),
        migrations.CreateModel(
            name='EmployeeList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('employee_id', models.IntegerField(unique=True)),
                ('employee_name', models.CharField(max_length=40)),
                ('short_name', models.CharField(blank=True, max_length=7)),
                ('father_name', models.CharField(blank=True, max_length=40)),
                ('mother_name', models.CharField(blank=True, max_length=40)),
                ('emp_img', models.ImageField(blank=True, upload_to='emp_img')),
                ('emp_password', models.CharField(blank=True, max_length=100)),
                ('qualification', models.CharField(blank=True, max_length=70)),
                ('blood_group', models.CharField(blank=True, choices=[('1', 'N/A'), ('2', 'A+'), ('3', 'A-'), ('4', 'B+'), ('5', 'B-'), ('6', 'AB+'), ('7', 'AB-'), ('8', 'O+'), ('9', 'O-')], max_length=2)),
                ('emp_gender', models.CharField(choices=[('1', 'Male'), ('2', 'Female'), ('3', 'Others')], max_length=1)),
                ('desig_name', models.CharField(max_length=40)),
                ('fitness_details', models.TextField(blank=True)),
                ('medical_certificate', models.ImageField(blank=True, upload_to='medical_certificate')),
                ('emp_mobile', models.CharField(blank=True, max_length=15)),
                ('emp_phone', models.CharField(blank=True, max_length=15)),
                ('email_address', models.EmailField(blank=True, max_length=80)),
                ('nationality', models.CharField(blank=True, max_length=30)),
                ('join_date', models.DateField()),
                ('resign_date', models.DateField(blank=True, null=True)),
                ('date_of_birth', models.DateField()),
                ('national_id', models.CharField(max_length=40)),
                ('basic_salary', models.FloatField(default=0)),
                ('starting_salary', models.FloatField(default=0)),
                ('present_address', models.TextField(blank=True)),
                ('permanent_address', models.TextField(blank=True)),
                ('added_by', models.CharField(max_length=80)),
                ('expire_date', models.DateField(auto_now_add=True)),
                ('is_teacher', models.BooleanField(default=0)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
                ('dpt_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Department')),
            ],
            options={
                'verbose_name': 'Employee',
                'verbose_name_plural': 'Employees',
            },
        ),
        migrations.CreateModel(
            name='ExamInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_name', models.CharField(max_length=50, unique=True)),
                ('exam_short_name', models.CharField(blank=True, max_length=10)),
                ('detail', models.CharField(blank=True, max_length=100)),
                ('dependency', models.BooleanField(default=0)),
                ('marks_entry_last_date', models.DateField(blank=True, null=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Exam',
                'verbose_name_plural': 'Examinations',
            },
        ),
        migrations.CreateModel(
            name='GroupTypeList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_type', models.CharField(max_length=50, unique=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Group Type',
                'verbose_name_plural': 'Group Types',
            },
        ),
        migrations.CreateModel(
            name='HealthConditionSetup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fitness_type', models.CharField(max_length=50, unique=True)),
                ('ordering', models.IntegerField(blank=True, null=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Health Condition Setup',
                'verbose_name_plural': 'Health Condition Setups',
            },
        ),
        migrations.CreateModel(
            name='Religion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('religion_name', models.CharField(max_length=20, unique=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Religion',
                'verbose_name_plural': 'Religions',
            },
        ),
        migrations.CreateModel(
            name='Section',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('section_name', models.CharField(max_length=20, unique=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Section',
                'verbose_name_plural': 'Sections',
            },
        ),
        migrations.CreateModel(
            name='SessionInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_name', models.CharField(max_length=20, unique=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Session',
                'verbose_name_plural': 'Sessions',
            },
        ),
        migrations.CreateModel(
            name='Shift',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('shift_name', models.CharField(max_length=20, unique=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Shift',
                'verbose_name_plural': 'Shifts',
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('student_id', models.IntegerField(default=0, unique=True)),
                ('student_img', models.ImageField(blank=True, upload_to='student_img')),
                ('student_pass', models.CharField(blank=True, max_length=90)),
                ('st_first_name', models.CharField(max_length=40, verbose_name='Student First Name')),
                ('st_last_name', models.CharField(blank=True, max_length=30)),
                ('st_bangla_name', models.CharField(blank=True, max_length=50)),
                ('st_gender', models.CharField(choices=[('1', 'Male'), ('2', 'Female'), ('3', 'Others')], max_length=1)),
                ('st_blood_group', models.CharField(blank=True, choices=[('1', 'N/A'), ('2', 'A+'), ('3', 'A-'), ('4', 'B+'), ('5', 'B-'), ('6', 'AB+'), ('7', 'AB-'), ('8', 'O+'), ('9', 'O-')], max_length=2)),
                ('date_of_birth', models.DateField()),
                ('birth_certificate_no', models.CharField(blank=True, max_length=30)),
                ('nationality', models.CharField(blank=True, max_length=30)),
                ('st_mobile', models.CharField(blank=True, max_length=15)),
                ('st_email', models.EmailField(blank=True, max_length=90)),
                ('st_roll', models.IntegerField(default=0)),
                ('st_reg', models.IntegerField(default=0)),
                ('psc_roll', models.IntegerField(default=0)),
                ('jsc_roll', models.IntegerField(default=0)),
                ('ssc_roll', models.IntegerField(default=0)),
                ('fitness_details', models.TextField(blank=True)),
                ('medical_certificate', models.ImageField(blank=True, upload_to='medical_certificate')),
                ('admission_date', models.DateField(auto_now_add=True)),
                ('admission_year', models.IntegerField(default=2020)),
                ('father_name', models.CharField(blank=True, max_length=40)),
                ('father_photo', models.ImageField(blank=True, upload_to='father_photo')),
                ('father_bangla_name', models.CharField(blank=True, max_length=40)),
                ('father_occupation', models.CharField(blank=True, max_length=40)),
                ('mother_name', models.CharField(blank=True, max_length=40)),
                ('mother_photo', models.ImageField(blank=True, upload_to='mother_photo')),
                ('mother_bangla_name', models.CharField(blank=True, max_length=40)),
                ('mother_occupation', models.CharField(blank=True, max_length=40)),
                ('guardian_name', models.CharField(blank=True, max_length=40)),
                ('guardian_relation', models.CharField(blank=True, max_length=40)),
                ('father_mobile', models.CharField(blank=True, max_length=15)),
                ('mother_mobile', models.CharField(blank=True, max_length=15)),
                ('guardian_mobile', models.CharField(blank=True, max_length=15)),
                ('guardian_monthly_income', models.CharField(blank=True, max_length=15)),
                ('guardian_photo', models.ImageField(blank=True, upload_to='guardian_photo')),
                ('present_address', models.TextField(blank=True, max_length=200)),
                ('address_in_bangla', models.TextField(blank=True, max_length=200)),
                ('parmanent_address', models.TextField(blank=True, max_length=200)),
                ('previous_school_name', models.TextField(blank=True, max_length=100)),
                ('previous_school_address', models.TextField(blank=True, max_length=200)),
                ('tc_no', models.CharField(blank=True, max_length=50, null=True)),
                ('tc_date', models.DateField(blank=True, null=True)),
                ('added_by', models.CharField(blank=True, max_length=80)),
                ('new_student', models.BooleanField(default=1)),
                ('transport_student', models.BooleanField(default=0)),
                ('residential_student', models.BooleanField(default=0)),
                ('student_type', models.CharField(blank=True, choices=[('1', 'General student'), ('2', 'Full fee scholarship'), ('3', 'Half fee scholarship'), ('6', 'Old student')], max_length=1)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=0)),
                ('class_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.ClassInfo')),
                ('fitness_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school.HealthConditionSetup')),
                ('group_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school.GroupTypeList')),
            ],
            options={
                'verbose_name': 'Student',
                'verbose_name_plural': 'Student Information',
            },
        ),
        migrations.CreateModel(
            name='Subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sub_name', models.CharField(max_length=50, unique=True)),
                ('sub_code', models.CharField(max_length=10)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Subject',
                'verbose_name_plural': 'Subjects',
            },
        ),
        migrations.CreateModel(
            name='Years',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=0, unique=True)),
                ('insert_date', models.DateTimeField(auto_now_add=True)),
                ('last_update', models.DateTimeField(auto_now=True)),
                ('insert_by', models.IntegerField(default=0)),
                ('update_by', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=1)),
            ],
            options={
                'verbose_name': 'Year',
                'verbose_name_plural': 'Years',
            },
        ),
        migrations.AddField(
            model_name='student',
            name='running_year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Years'),
        ),
        migrations.AddField(
            model_name='student',
            name='section_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Section'),
        ),
        migrations.AddField(
            model_name='student',
            name='session_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.SessionInfo'),
        ),
        migrations.AddField(
            model_name='student',
            name='shift_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Shift'),
        ),
        migrations.AddField(
            model_name='student',
            name='st_religion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Religion'),
        ),
        migrations.AddField(
            model_name='employeelist',
            name='emp_religion',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Religion'),
        ),
        migrations.AddField(
            model_name='employeelist',
            name='fitness_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='school.HealthConditionSetup'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='sub_name',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Subject'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='year',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='school.Years'),
        ),
    ]
